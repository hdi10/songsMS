
INSERT INTO SongList (ownerId, name, isPrivate) VALUES ('mmuster','mmusterPrivate',true);
INSERT INTO SongList (ownerId, name, isPrivate) VALUES ('mmuster','mmusterPublic',false);

INSERT INTO SongList (ownerId, name, isPrivate) VALUES ('eschuler','eschulerPrivate',true);
INSERT INTO SongList (ownerId, name, isPrivate) VALUES ('eschuler','eschulerPublic',false);

INSERT INTO SongList_Song (songList_id, song_id) VALUES (1,1);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (1,2);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (2,1);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (2,2);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (3,1);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (3,2);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (4,1);
INSERT INTO SongList_Song (songList_id, song_id) VALUES (4,2);


CREATE TABLE IF NOT EXISTS songs (id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,title VARCHAR(100) NOT NULL,artist VARCHAR(100),label VARCHAR(100),released INT);
CREATE TABLE IF NOT EXISTS song_list_songs(song_list_id INTEGER NOT NULL,song_id INTEGER NOT NULL,PRIMARY KEY(song_list_id, song_id),FOREIGN KEY(song_list_id) REFERENCES song_list(song_list_id),FOREIGN KEY(song_id) REFERENCES songs(id));
CREATE TABLE IF NOT EXISTS song_list(song_list_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,is_private BOOLEAN NOT NULL ,user_id VARCHAR(20) NOT NULL,name VARCHAR(50) NOT NULL,FOREIGN KEY (user_id) REFERENCES usertable(user_id));
CREATE TABLE IF NOT EXISTS usertable(user_id VARCHAR(20) PRIMARY KEY, password VARCHAR(20) NOT NULL, firstName VARCHAR(50) NOT NULL, lastName VARCHAR(50) NOT NULL, token VARCHAR(100) NULL);
CREATE TABLE IF NOT EXISTS songs_list_song (song_list_id INTEGER,id INTEGER,PRIMARY KEY(song_list_id, id),FOREIGN KEY(song_list_id) REFERENCES song_list(song_list_id),FOREIGN KEY(id) REFERENCES songs(id));


INSERT INTO usertable (user_id, password, firstName, lastName) VALUES ('bschmitt', '123', 'Burkhart', 'Schmitt');

INSERT INTO usertable (user_id, password, firstName, lastName) VALUES ('maxime', 'pass1234', 'Maxime', 'Muster');

INSERT INTO usertable (user_id, password, firstName, lastName, token) VALUES ('jane', 'pass1234', 'Jane', 'Muster', 'validToken');

INSERT INTO usertable (user_id, password, firstName, lastName, token) VALUES ('fritz', 'pass1234', 'Fritz', 'Muster', 'qwertyuiiooxd1a245');


INSERT INTO SongList (ownerId, name, isPrivate) VALUES (TRUE, 'maxime', 'MaximesPrivate');
INSERT INTO SongList (ownerId, name, isPrivate) VALUES (FALSE, 'maxime', 'MaximesPublic');
INSERT INTO SongList (ownerId, name, isPrivate) VALUES (TRUE, 'jane', 'JanesPrivate');
INSERT INTO SongList (ownerId, name, isPrivate) VALUES (FALSE, 'jane', 'JanesPrivate');
