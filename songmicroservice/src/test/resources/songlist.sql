/*--DROP TABLE IF EXISTS song_list;

--CREATE TABLE IF NOT EXISTS usertable(user_id VARCHAR(20) PRIMARY KEY, password VARCHAR(20) NOT NULL, firstName VARCHAR(50) NOT NULL, lastName VARCHAR(50) NOT NULL, token VARCHAR(100) NULL);

CREATE TABLE IF NOT EXISTS song_list(song_list_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,is_private BOOLEAN NOT NULL ,user_id VARCHAR(20) NOT NULL,name VARCHAR(50) NOT NULL,FOREIGN KEY (user_id) REFERENCES usertable(user_id));
CREATE TABLE IF NOT EXISTS song_list_songs(song_list_id INTEGER NOT NULL,song_id INTEGER NOT NULL,PRIMARY KEY(song_list_id, song_id),FOREIGN KEY(song_list_id) REFERENCES song_list(song_list_id),FOREIGN KEY(song_id) REFERENCES songs(id));

CREATE TABLE IF NOT EXISTS usertable(user_id VARCHAR(20) PRIMARY KEY, password VARCHAR(20) NOT NULL, firstName VARCHAR(50) NOT NULL, lastName VARCHAR(50) NOT NULL, token VARCHAR(100) NULL);

INSERT INTO usertable (user_id, password, firstName, lastName) VALUES ('bschmitt', '123', 'Burkhart', 'Schmitt');

INSERT INTO usertable (user_id, password, firstName, lastName) VALUES ('maxime', 'pass1234', 'Maxime', 'Muster');

INSERT INTO usertable (user_id, password, firstName, lastName, token) VALUES ('jane', 'pass1234', 'Jane', 'Muster', 'validToken');

INSERT INTO usertable (user_id, password, firstName, lastName, token) VALUES ('fritz', 'pass1234', 'Fritz', 'Muster', 'qwertyuiiooxd1a245');



INSERT INTO song_list (is_private, user_id, name) VALUES (TRUE, 'maxime', 'MaximesPrivate');
INSERT INTO song_list (is_private, user_id, name) VALUES (FALSE, 'maxime', 'MaximesPublic');
INSERT INTO song_list (is_private, user_id, name) VALUES (TRUE, 'jane', 'JanesPrivate');
INSERT INTO song_list (is_private, user_id, name) VALUES (FALSE, 'jane', 'JanesPrivate');

*/
